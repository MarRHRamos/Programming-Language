import re

# Gramática
grammar = [
    ("E", "T ([+|-]) T"), 
    ("T", "F ([*/] F)"), 
    ("F", r"([0-9]+\.?)[0-9]*|([a-zA-Z_][a-zA-Z_0-9]*)")
]

# Función para analizar la gramática
def analyze_grammar(input_string):
    for production in grammar:
        pattern = re.compile(rf"^{production[1]}$")  # Compilamos el patrón
        if pattern.match(input_string):
            return production[0]  # Devolvemos el símbolo del lado izquierdo

# Función para generar un lenguaje
def generate_language(input_string):
    token = analyze_grammar(input_string)
    if token == "E":
        # Generamos el lenguaje
        print("Variable:", input_string)
    elif token == "T":
        # Generamos el lenguaje
        print("Número:", input_string)
    elif token == "F":
        # Generamos el lenguaje
        print("Variable o número:", input_string)

# Ejemplo de uso
input_string = "2 + 3 * x"
generate_language(input_string)
