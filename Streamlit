import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import sklearn
from sklearn.linear_model import LinearRegression

# Título de la aplicación
st.set_page_config(page_title="Análisis de Datos con Streamlit", layout="wide")
st.title("Análisis de Datos con Streamlit")

# Cargar datos
st.sidebar.title("Carga de Datos")
uploaded_file = st.sidebar.file_uploader("Selecciona un archivo CSV", type="csv")

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.sidebar.write(f"Datos cargados: {df.shape[0]} filas y {df.shape[1]} columnas")

    # Resumen de los datos
    st.subheader("Resumen de los Datos")
    st.write(df.describe())

    # Visualización de los datos
    st.subheader("Visualización de los Datos")
    st.write("Selecciona las columnas que quieres visualizar:")
    selected_columns = st.multiselect("", df.columns)

    if selected_columns:
        fig, ax = plt.subplots()
        df[selected_columns].plot(kind="line", ax=ax)
        st.pyplot(fig)

    # Técnica estadística: Regresión lineal
    st.subheader("Análisis de Regresión Lineal")
    st.write("Selecciona la variable dependiente y las variables independientes:")
    target_column = st.selectbox("Variable Dependiente", df.columns)
    feature_columns = st.multiselect("Variables Independientes", df.columns, default=[c for c in df.columns if c != target_column])

    if target_column and feature_columns:
        X = df[feature_columns]
        y = df[target_column]
        model = LinearRegression()
        model.fit(X, y)
        st.write(f"Coeficientes del modelo: {model.coef_}")
        st.write(f"Intercepto del modelo: {model.intercept_}")
        st.write(f"R-squared: {model.score(X, y):.2f}")
